{"version":3,"sources":["components/store/type.js","components/store/reduces/reducerMovies.js","components/store/reduces/index.js","components/store/index.js","assets/images/Netflix_Logo_RGB.png","components/hooks/useScrollY.js","components/hooks/useViewport.js","components/Navbar/Navbar.js","components/utils/index.js","components/store/action/index.js","components/contents/MoviesRow.js","components/contents/Content.js","components/intro/Intro.js","components/movieDetail/MovieDetail.js","components/mẹnu/MenuItem.js","components/mẹnu/Menu.js","components/page/Home.js","components/searchMovie/SearchMovie.js","components/page/Search.js","components/Footer/Footer.js","App.js","index.js"],"names":["GET_NETFLIX_ORIGINALS","GET_TRENDING_MOVIES","GET_TOP_RATED_MOVIES","GET_ACTION_MOVIES","GET_COMEDY_MOVIES","GET_HORROR_MOVIES","GET_ROMANCE_MOVIES","GET_DOCUMENTARIES","GET_SEARCH_MOVIES","SET_MOVIE_DETAILS","reducerMoviesInitialState","NetflixOriginals","TrendingMovies","TopRatedMovies","ActionMovies","ComedyMovies","HorrorMovies","RomanceMovies","Documentaries","MoviesDetail","SearchMovies","reducerMovies","state","action","type","payload","Types","rootReducer","combineReducers","infoMovies","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","useScrollY","useState","scrollY","setScrollY","handleScroll","window","document","documentElement","scrollTop","useEffect","addEventListener","removeEventListener","useViewport","innerWidth","clientWidth","windowWidth","setWindowWidth","handleWindowWidth","width","Navbar","props","keywords","setKeywords","navigate","useNavigate","Navigation","style","backgroundColor","className","onClick","src","NetflixLogo","alt","placeholder","onChange","e","target","value","length","trim","styled","div","SmoothHorizontalScrolling","time","amount","start","eAmt","curTime","scrollCounter","y","setTimeout","SHS_B","scrollTo","sc","scrollLeft","randomRgbaColor","opacity","R","Math","round","random","G","B","API_KEY","BASE_URL","setMovieDetail","movie","dispatch","MoviesRow","movies","title","isPoster","idSection","sliderRef","useRef","movieRef","dragDown","setDragDown","dragMove","setDragMove","isDrag","setIsDrag","useDispatch","handleScrollRight","maxScrollLeft","current","scrollWidth","handleScrollLeft","MoviesRowContainer","draggable","id","MoviesSlider","ref","onDragStart","screenX","onDragEnd","onDragEnter","gridTemplateColumns","map","index","poster_path","backdrop_path","imageUrl","handleSetMovie","name","Content","useSelector","axios","get","result","data","results","console","log","GoToTop","scroll","scrollToTop","visibility","Intro","isMuted","setIsMuted","IntroContainer","playing","loop","height","volume","mutex","url","class","prev","MovieDetail","showModal","MoviesDetailModal","backgroundImage","backgroundSize","vote_average","popularity","moment","release_date","format","first_air_date","runtime","episode_run_time","overview","fadeIn","keyframes","MenuItem","Icon","to","spy","hashSpy","offset","duration","activeClass","color","Menu","MenusPane","FaHome","FaHotjar","FaStar","GiNinjaHeroicStance","MdTheaterComedy","GiGhost","GiRomanToga","GiBandageRoll","Home","isShowMovieDetail","setIsMovieDetail","SearchMovie","URLSearchParams","useLocation","search","getSearchMovies","SearchPane","media_type","imgUrl","NotFound","Search","Footer","DivFooter","href","App","exact","path","element","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.98c8bed2.chunk.js","sourcesContent":["export const GET_NETFLIX_ORIGINALS = 'GET_NETFLIX_ORIGINALS';\r\nexport const GET_TRENDING_MOVIES = 'GET_TRENDING_MOVIES';\r\nexport const GET_TOP_RATED_MOVIES = 'GET_TOP_RATED_MOVIES';\r\nexport const GET_ACTION_MOVIES = 'GET_ACTION_MOVIES';\r\nexport const GET_COMEDY_MOVIES = 'GET_COMEDY_MOVIES';\r\nexport const GET_HORROR_MOVIES = 'GET_HORROR_MOVIES';\r\nexport const GET_ROMANCE_MOVIES = 'GET_ROMANCE_MOVIES';\r\nexport const GET_DOCUMENTARIES = 'GET_DOCUMENTARIES';\r\nexport const GET_SEARCH_MOVIES = 'GET_SEARCH_MOVIES';\r\n\r\nexport const SET_MOVIE_DETAILS = 'SET_MOVIE_DETAILS';","import * as Types from \"../type\";\r\n\r\nconst reducerMoviesInitialState = {\r\n    NetflixOriginals: null,\r\n    TrendingMovies:  null,\r\n    TopRatedMovies:  null,\r\n    ActionMovies:  null,\r\n    ComedyMovies:  null,\r\n    HorrorMovies: null,\r\n    RomanceMovies:  null,\r\n    Documentaries: null,\r\n    MoviesDetail: null,\r\n    SearchMovies: null\r\n}\r\nconst reducerMovies = (state = reducerMoviesInitialState, action) => {\r\n    const {type, payload} = action\r\n    switch(type) {\r\n        case Types.GET_NETFLIX_ORIGINALS:\r\n            return {...state, NetflixOriginals: payload}\r\n        \r\n        case Types.GET_TRENDING_MOVIES:\r\n            return {...state, TrendingMovies: payload}\r\n        \r\n        case Types.GET_ACTION_MOVIES:\r\n            return {...state, ActionMovies: payload}\r\n\r\n        case Types.GET_COMEDY_MOVIES:\r\n            return {...state, ComedyMovies: payload}\r\n\r\n        case Types.GET_DOCUMENTARIES:\r\n            return {...state, Documentaries: payload}\r\n\r\n        case Types.GET_HORROR_MOVIES:\r\n            return {...state, HorrorMovies: payload}\r\n\r\n        case Types.GET_TOP_RATED_MOVIES:\r\n            return {...state, TopRatedMovies: payload}\r\n\r\n        case Types.GET_ROMANCE_MOVIES:\r\n            return {...state, RomanceMovies: payload}\r\n\r\n        case Types.SET_MOVIE_DETAILS:\r\n            return {...state, MoviesDetail: payload}\r\n        \r\n        case Types.GET_SEARCH_MOVIES:\r\n            return {...state, SearchMovies: payload}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default reducerMovies;","import {combineReducers} from 'redux'\r\nimport reducerMovies from './reducerMovies'\r\n\r\nconst rootReducer = combineReducers({\r\n    infoMovies: reducerMovies\r\n});\r\n\r\nexport default rootReducer","import{ applyMiddleware, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reduces'\r\n\r\nconst middleware = [thunk]\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store;","export default __webpack_public_path__ + \"static/media/Netflix_Logo_RGB.f4070143.png\";","import { useEffect, useState } from \"react\"\r\n\r\nexport function useScrollY() {\r\n    const [scrollY, setScrollY] = useState(0)\r\n\r\n    const handleScroll = () => {\r\n        const scrollY = window.scrollY || document.documentElement.scrollTop\r\n        setScrollY(scrollY)\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleScroll();\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        }\r\n    }, [])\r\n\r\n    return ([scrollY])\r\n}","import { useEffect, useState } from \"react\"\r\n\r\nexport const useViewport = () => {\r\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth || document.documentElement.clientWidth)\r\n\r\n    useEffect(() => {\r\n        const handleWindowWidth = () => {\r\n            const width = window.innerWidth || document.documentElement.clientWidth;\r\n\r\n            setWindowWidth(width);\r\n        }\r\n        handleWindowWidth()\r\n        window.addEventListener('resize', handleWindowWidth);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowWidth);\r\n        }\r\n    }, []);\r\n        return [windowWidth]\r\n    \r\n}\r\n\r\n","import NetflixLogo from '../../assets/images/Netflix_Logo_RGB.png';\r\nimport {MdSearch} from 'react-icons/md'\r\nimport styled from 'styled-components';\r\nimport { useScrollY } from '../hooks';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Navbar(props) {\r\n    const [scrollY] = useScrollY()\r\n    const [keywords, setKeywords] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleChangeInput = (e)=> {\r\n        let keywords = e.target.value;\r\n        setKeywords(keywords)\r\n\r\n        if(keywords.length > 0) {\r\n            navigate(`/search?keywords=${keywords.trim()}`)\r\n        } else {\r\n            navigate('/netflix-clone')\r\n        }\r\n    }\r\n\r\n    const goHome = () => {\r\n        navigate('/netflix-clone');\r\n        setKeywords('')\r\n    }\r\n\r\n    return (\r\n        <Navigation style={scrollY < 50 ? {backgroundColor: 'transparent'} : {backgroundColor: 'var(--color-background)'}} > \r\n            <div className='navContainer'>  \r\n                <div className='logo' onClick={goHome}>\r\n                    <img src={NetflixLogo} alt=\"\" /> \r\n                </div>\r\n                <div className='navSearch'>   \r\n                    <MdSearch className='iconSearch'/>\r\n                    <input \r\n                        type=\"text\"\r\n                        placeholder=\"Input title, genres, people\"\r\n                        onChange={handleChangeInput}\r\n                        value={keywords}\r\n                    />\r\n                </div>\r\n            </div>  \r\n        </Navigation>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n\r\nconst Navigation = styled.div`\r\n    width: 100%;\r\n    height: 80px;\r\n    position: fixed;\r\n    top: 0;\r\n    transition: all 1s ease-in;\r\n    z-index: 50;\r\n\r\n    media only screen and (max-width:600px) {\r\n        height: 100px;\r\n    }\r\n\r\n        .navContainer {\r\n            background-color: transparent;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: flex-start;\r\n            height: 100%;\r\n            flex-direction: row;\r\n\r\n            media only screen and (max-width:600px) {\r\n                flex-direction: column;\r\n            }\r\n\r\n            .logo{\r\n                width: 120px;\r\n                cursor: pointer;\r\n                img {\r\n                    width:100%;\r\n                }\r\n            }\r\n        \r\n\r\n            .navSearch {\r\n                color:var(--color-white);\r\n                padding-right: 20px;\r\n                display: flex;\r\n                justify-content: flex-end;\r\n                \r\n                &:hover .iconSearch {\r\n                    color: var(--color-white);\r\n                }\r\n                \r\n                .iconSearch {\r\n                    width:20px;\r\n                    height:20px;\r\n                    cursor:pointer;\r\n                    transform:translateX(24px) translateY(10px);\r\n                    color: #bbb;\r\n\r\n                }\r\n\r\n                input {\r\n                    font-size:14px;\r\n                    border: 1px solid #fff;\r\n                    color: white;\r\n                    outline:none;\r\n                    width: 0;\r\n                    padding:10px;\r\n                    cursor: pointer;\r\n                    opacity: 0;\r\n                    background:var(--color-background);\r\n                    transition: width 0.5s;\r\n\r\n                    &:focus {\r\n                        padding-left: 26px;\r\n                        width: 300px;\r\n                        cursor: text;\r\n                        opacity: 1;\r\n                        border-radius:4px;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n`   \r\n","export  function SmoothHorizontalScrolling(e, time, amount, start) {\r\n    let eAmt = amount / 100\r\n    let curTime = 0\r\n    let scrollCounter = 0\r\n    const y = window.scrollY;\r\n\r\n    while(curTime <= time) {\r\n        window.setTimeout(SHS_B, curTime, e, scrollCounter, eAmt, start, y);\r\n        curTime += time/ 100;\r\n        scrollCounter ++;\r\n    }\r\n    window.scrollTo(0,y)\r\n}\r\n\r\nfunction SHS_B(e, sc, eAmt, start, y) {\r\n    e.scrollLeft = eAmt * sc + start;\r\n}\r\n\r\nexport function randomRgbaColor (opacity) {\r\n    const R = Math.round(Math.random() * 256 );\r\n    const G= Math.round(Math.random() * 256 );\r\n    const B = Math.round(Math.random() * 256 );\r\n\r\n    let color = `rgba(${R}, ${G}, ${B}, ${opacity})`;\r\n\r\n    return color;\r\n}","import axios from \"axios\";\r\nimport { get } from \"react-scroll/modules/mixins/scroller\";\r\nimport * as Types from \"../type\";\r\n\r\nconst API_KEY = '74d1111ff793d2c86a4104bab872bc34';\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport const getNetflixOriginals = () => async (dispatch) => {\r\n    try {\r\n      const result = await axios.get(\r\n        `${BASE_URL}/discover/tv?api_key=${API_KEY}&with_networks=213`\r\n      );\r\n      dispatch({ type: Types.GET_NETFLIX_ORIGINALS, payload: result.data.results });\r\n    } catch (error) {\r\n      console.log(\"Get Netflix Originals error: \", error);\r\n    }\r\n  };\r\n  \r\n  export const getTrendingMovies = () => {\r\n    return async (dispatch) => {\r\n      try {\r\n        const result = await axios.get(\r\n          `${BASE_URL}/trending/all/week?api_key=${API_KEY}&language=en-US`\r\n        )\r\n        dispatch({ type: Types.GET_TRENDING_MOVIES, payload: result.data.results })\r\n      } catch (error) {\r\n        console.log(\"Get Trending movies error: \", error);\r\n      }\r\n    }\r\n  }\r\n\r\nexport const getTopRatedMovies = () => {\r\n    return async (dispatch) => {\r\n      try {\r\n        const result = await axios.get(\r\n          `${BASE_URL}/movie/top_rated?api_key=${API_KEY}&language=en-US`\r\n        )\r\n        dispatch({ type: Types.GET_TOP_RATED_MOVIES, payload: result.data.results })\r\n      } catch (error) {\r\n        console.log(\"Get Top rate movies error: \", error);\r\n      }\r\n    }\r\n  }\r\n  \r\n  export const getActionMovies = () => {\r\n    return async (dispatch) => {\r\n      try {\r\n        const result = await axios.get(\r\n          `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=28`\r\n        )\r\n  \r\n        dispatch({ type: Types.GET_ACTION_MOVIES, payload: result.data.results })\r\n      } catch (error) {\r\n        console.log(\"Get Action movies error: \", error);\r\n      }\r\n    }\r\n  }\r\n  \r\n  export const getComedyMovies = () => {\r\n    return async (dispatch) => {\r\n      try {\r\n        const result = await axios.get(\r\n          `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=35`\r\n        )\r\n  \r\n        dispatch({ type: Types.GET_COMEDY_MOVIES, payload: result.data.results })\r\n      } catch (error) {\r\n        console.log(\"Get Comedy Movies error: \", error);\r\n      }\r\n    }\r\n  }\r\n  \r\n  export const getHorrorMovies = () => {\r\n    return async (dispatch) => {\r\n      try {\r\n        const result = await axios.get(\r\n          `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=27`\r\n        )\r\n        dispatch({ type: Types.GET_HORROR_MOVIES, payload: result.data.results })\r\n      } catch (error) {\r\n        console.log(\"Get Horror Movies error: \", error);\r\n      }\r\n    }\r\n  }\r\n  \r\n  export const getRomanceMovies = () => {\r\n    return async (dispatch) => {\r\n      try {\r\n        const result = await axios.get(\r\n          `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=10749`\r\n        )\r\n        dispatch({ type: Types.GET_ROMANCE_MOVIES, payload: result.data.results })\r\n      } catch (error) {\r\n        console.log(\"Get Romance Movies error: \", error);\r\n      }\r\n    }\r\n  }\r\n  \r\n  export const getDocumentaries = () => {\r\n    return async (dispatch) => {\r\n      try {\r\n        const result = await axios.get(\r\n          `${BASE_URL}/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n        )\r\n        dispatch({ type: Types.GET_DOCUMENTARIES, payload: result.data.results })\r\n      } catch (error) {\r\n        console.log(\"Get Documentaries error: \", error);\r\n      }\r\n    }\r\n  }\r\n  \r\n  \r\nexport const setMovieDetail = (movie) => dispatch => {\r\n  dispatch({type: Types.SET_MOVIE_DETAILS, payload: movie})\r\n}\r\n \r\nexport const getSearchMovies = (keywords) => async(dispatch) => {\r\n  try {\r\n    const result = await axios.get(\r\n      `${BASE_URL}/search/multi?api_key=${API_KEY}&language=en-US&include_adult=false&query=${keywords}`\r\n    )\r\n    dispatch({type: Types.GET_SEARCH_MOVIES, payload: result.data.results})\r\n  } catch(error) {\r\n    console.log(\"GET Search Movies error: \", error);\r\n  }\r\n\r\n}","import styled from \"styled-components\";\r\nimport {BsChevronLeft, BsChevronRight} from \"react-icons/bs\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { SmoothHorizontalScrolling } from \"../utils\";\r\nimport { useViewport }from \"../hooks\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setMovieDetail } from \"../store/action\";\r\n\r\nfunction MoviesRow(props) {\r\n    const {movies, title, isPoster, idSection} = props;\r\n\r\n    const sliderRef = useRef();\r\n    const movieRef = useRef();\r\n    const [dragDown, setDragDown] = useState(0)\r\n    const [dragMove, setDragMove] = useState(0)\r\n    const [isDrag, setIsDrag] = useState(false)\r\n    const [windowWidth] = useViewport();\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSetMovie = (movie) => {\r\n        dispatch(setMovieDetail(movie))\r\n    }\r\n\r\n    const handleScrollRight = () => {\r\n        const maxScrollLeft = sliderRef.current.scrollWidth - sliderRef.current.clientWidth;\r\n\r\n        if(sliderRef.current.scrollLeft < maxScrollLeft) {\r\n            SmoothHorizontalScrolling(\r\n                sliderRef.current,\r\n                250,\r\n                movieRef.current.clientWidth * 2,\r\n                sliderRef.current.scrollLeft\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleScrollLeft = () => {\r\n\r\n        if(sliderRef.current.scrollLeft > 0) {\r\n            SmoothHorizontalScrolling(\r\n                sliderRef.current,\r\n                250,\r\n                - movieRef.current.clientWidth * 2,\r\n                sliderRef.current.scrollLeft\r\n            )\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isDrag) {\r\n            if(dragMove < dragDown) handleScrollRight();\r\n            if(dragMove > dragDown) handleScrollLeft();\r\n        }\r\n    }\r\n    , [dragDown, dragMove, isDrag])\r\n\r\n    const onDragStart = e => {\r\n        setIsDrag(true)\r\n        setDragDown(e.screenX)\r\n    }\r\n\r\n    const onDragEnd = e => {\r\n        setIsDrag(false)\r\n    }\r\n\r\n    const onDragEnter = e => {\r\n        setDragMove(e.screenX)   \r\n    }\r\n\r\n    return (\r\n        <MoviesRowContainer draggable='false' id={idSection}>   \r\n            <h1 className=\"heading\">{title}</h1>\r\n            <MoviesSlider \r\n                ref={sliderRef}\r\n                draggable='true' \r\n                onDragStart={onDragStart}\r\n                onDragEnd={onDragEnd}\r\n                onDragEnter={onDragEnter}\r\n                style = {\r\n                    movies && movies.length > 0 \r\n                        ? {\r\n                            gridTemplateColumns: `repeat(${movies.length}, \r\n                                ${windowWidth > 1200 ? '360px'\r\n                                 :windowWidth > 992  ? '300px'\r\n                                 :windowWidth > 768  ? '250px'\r\n                                 :                      '200px' \r\n                                }\r\n\r\n                            )`\r\n                        }\r\n                        : {}\r\n                }\r\n            >\r\n                {\r\n                   movies && movies.length > 0 && movies.map((movie, index) =>\r\n                    {\r\n                        if(movie.poster_path && movie.backdrop_path !== null) {\r\n                            let imageUrl = isPoster\r\n                            ? `https://image.tmdb.org/t/p/original/${movie.poster_path}`\r\n                            : `https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`\r\n                            \r\n                            return (\r\n                                <div \r\n                                    key={index} \r\n                                    className=\"movieItem\" \r\n                                    ref={movieRef} \r\n                                    onClick = {() => handleSetMovie(movie)}\r\n                                >\r\n                                    <img src={imageUrl} alt=''/>\r\n                                <div className=\"movieName\">{movie.title || movie.name}</div>\r\n                                </div>\r\n                            )\r\n                         }\r\n                     })\r\n                }\r\n            </MoviesSlider>\r\n\r\n            <div >   \r\n                <BsChevronLeft\r\n                    className = {`btn btnLeft ${isPoster && 'isPoster' }` }\r\n                    onClick={handleScrollLeft}\r\n                />\r\n                <BsChevronRight\r\n                    className= {`btn btnRight  ${isPoster && 'isPoster'}` }\r\n                    onClick={handleScrollRight}\r\n                />\r\n            </div>\r\n        </MoviesRowContainer>\r\n    )\r\n}\r\n\r\nexport default MoviesRow;\r\n\r\nconst MoviesRowContainer = styled.div`\r\n    background-color: var(--color-background);\r\n    color: var(--color-white);\r\n    padding: 20px 20px 0;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    .heading {\r\n        font-size: 18px;\r\n        margin-bottom: 12px;\r\n        user-select: none;\r\n    }\r\n\r\n    .btn {\r\n        position: absolute;\r\n        top: 50%;\r\n        z-index: 20;\r\n        transform-origin: center;\r\n        cursor: pointer;\r\n        background-color: rgba(0, 0, 0, 0.6 );\r\n        height: 50px;\r\n        width: 40px;\r\n        border-radius: 4px;\r\n        display: flex;\r\n        align-items: center;\r\n        transform: translateY(-20%);\r\n\r\n        &:hover {\r\n            background-color: rgba(0, 0, 0, 0.8);\r\n        }\r\n\r\n        %hover svg {\r\n            opacity: 1;\r\n            transform: scale(1.2);\r\n        }\r\n\r\n        svg {\r\n            opacity: 0.7;\r\n            font-size: 50px;\r\n            transition: all 0.3s linear;\r\n        }\r\n\r\n    }\r\n    \r\n    .btnLeft {\r\n        left: 30px;\r\n    }\r\n    \r\n    .btnRight {\r\n        right: 30px;\r\n    }\r\n    \r\n    .isPoster {\r\n        height: 80px;\r\n        width: 50px;\r\n    }\r\n`;\r\n\r\nconst MoviesSlider = styled.div`\r\n    display: grid;\r\n    gap: 6px;\r\n    transition: all 0.3s linear;\r\n    user-select: none;\r\n    overflow-y: hidden;\r\n    overflow-x: auto;\r\n    overflow: hidden;\r\n    padding-top: 28px;\r\n    padding-bottom: 28px;\r\n    scroll-behavior: smooth ;\r\n\r\n    &:hover .movieItem{\r\n        opacity: 0.5;\r\n    }\r\n\r\n    .movieItem {\r\n        transform: scale(1);\r\n        max-width: 400px;\r\n        max-height:500px;\r\n        width: 100%;\r\n        height: 100%;\r\n        transition: all 0.3s ease-out;\r\n        user-select: none;\r\n        overflow: hidden;\r\n        border-radius: 6px;\r\n        transform: center left;\r\n\r\n        &:hover{\r\n            opacity: 1;\r\n            transform: scale(1.1);\r\n            z-index:10;\r\n        }\r\n\r\n        img {\r\n            height: 100%;\r\n            width: 100%;\r\n            object-fit:cover;\r\n        }\r\n\r\n        .movieName {\r\n            position: absolute;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            padding:4px;\r\n            text-align: center;\r\n            font-size: 14px;\r\n            background-color: rgba(0, 0, 0, 0.65);\r\n        }\r\n    }\r\n\r\n`;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MoviesRow from './MoviesRow';\r\nimport * as ACTIONS from '../store/action';\r\nimport {FaArrowAltCircleUp} from 'react-icons/fa'\r\nimport styled from 'styled-components';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\nimport { useScrollY } from '../hooks';\r\n\r\nconst ScrollToTop = () => {\r\n    scroll.scrollToTop();\r\n}\r\n\r\nfunction Content(props) {\r\n    const dispatch = useDispatch();\r\n    const [scrollY] = useScrollY();\r\n    const {\r\n        NetflixOriginals,\r\n        TrendingMovies,\r\n        ActionMovies,\r\n        ComedyMovies,\r\n        Documentaries,\r\n        HorrorMovies,\r\n        TopRatedMovies,\r\n        RomanceMovies,\r\n    }= useSelector (state => state.infoMovies)\r\n\r\n    useEffect(() =>{\r\n        dispatch(ACTIONS.getNetflixOriginals());\r\n        dispatch(ACTIONS.getTrendingMovies());\r\n        dispatch(ACTIONS.getActionMovies());\r\n        dispatch(ACTIONS.getDocumentaries());\r\n        dispatch(ACTIONS.getHorrorMovies());\r\n        dispatch(ACTIONS.getRomanceMovies());\r\n        dispatch(ACTIONS.getComedyMovies());\r\n        dispatch(ACTIONS.getTopRatedMovies());\r\n    },[dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <MoviesRow movies={NetflixOriginals} title=\"Netflix Originals\" isPoster = {true} idSection = 'netflix'/>\r\n            <MoviesRow movies={TrendingMovies} title=\"Trending Movies\" idSection = 'trending' />\r\n            <MoviesRow movies={TopRatedMovies} title=\"Top Rated Movies\" idSection = 'topRated'/>\r\n            <MoviesRow movies={ActionMovies} title=\"Action Movies\" idSection = 'action'/>\r\n            <MoviesRow movies={ComedyMovies} title=\"Comedy Movies\" idSection = 'comedy'/>\r\n            <MoviesRow movies={HorrorMovies} title=\"Horror Movies\"  idSection = 'horror'/>\r\n            <MoviesRow movies={RomanceMovies} title=\"Romance Movies\" idSection = 'romance'/>\r\n            <MoviesRow movies={Documentaries} title=\"Documentaries\" idSection = 'documentaries'/>\r\n            <GoToTop\r\n                onClick={() =>  ScrollToTop()}\r\n                style= { {\r\n                    visibility: `${scrollY > 600  ? 'visible' : 'hidden'}\t`\r\n                }}\r\n            >\r\n                <FaArrowAltCircleUp />\r\n            </GoToTop>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Content;\r\n\r\nconst GoToTop = styled.div`\r\n    position: fixed;\r\n    z-index: 10;\r\n    right: 70px;\r\n    bottom: 50px;\r\n    font-size: 50px;\r\n    color: rgba(255, 255, 255, 0.4);\r\n    transition: all 0.3s linear;\r\n\r\n    &:hover {\r\n        color: rgba(255, 255, 255, 0.8);\r\n    }\r\n\r\n    @media screen and (min-width: 600px) {\r\n        right: 40px\r\n    }\r\n`","import ReactPlayer from \"react-player\";\r\nimport {VscMute, VscUnmute } from \"react-icons/vsc\"\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Intro(props) {\r\n    const [isMuted, setIsMuted] = useState(true)\r\n\r\n    return (\r\n        <IntroContainer>   \r\n            <ReactPlayer\r\n                playing={true}\r\n                loop={true}\r\n                width='100%'\r\n                height='100%'\r\n                volume={1}\r\n                mutex ={isMuted}\r\n                url='https://vimeo.com/769839588'\r\n                className='videoIntro'\r\n            />\r\n            <div className=\"infoIntro\">\r\n                <h1 className=\"heading\">ORANGE x NETFLIX</h1>\r\n                <p class=\"overView\">ORANGE x NETFLIX Directed by Luisa Kracht</p>\r\n            </div>\r\n\r\n            {\r\n                isMuted ? (\r\n                    <VscMute \r\n                        className=\"btnVolume\"\r\n                        onClick={() => setIsMuted(prev => !prev)}\r\n                    />\r\n                ) : (\r\n                    <VscUnmute\r\n                        className=\"btnVolume\"\r\n                        onClick={() => setIsMuted(prev => !prev)}\r\n                    />\r\n                )\r\n            }\r\n\r\n            <div className=\"fadeBottom\"></div>\r\n\r\n        </IntroContainer>\r\n    )\r\n}\r\n\r\nexport default Intro;\r\n\r\nconst IntroContainer = styled.div`\r\n    background-color: var(--color-background);\r\n    position: relative;\r\n    color: var(--color-white);\r\n    padding-top:56%;\r\n\r\n    .videoIntro {\r\n        position: absolute;\r\n        top: -10px;\r\n        left: 0;\r\n    }\r\n\r\n    .infoIntro {\r\n        position: absolute;\r\n        top: 200px;\r\n        left: 30px;\r\n\r\n        @media screen and (max-width:800px) {\r\n            top: 150px;\r\n            left: 25px;\r\n        }\r\n\r\n        @media screen and (max-width:600px) {\r\n            top: 120px;\r\n            left: 15px;\r\n        }\r\n\r\n        .heading {\r\n            font-size: 60px;\r\n            transition: all 0.3s;\r\n\r\n            @media screen and (max-width:800px) {\r\n                font-size: 40px;\r\n            }\r\n\r\n            @media screen and (max-width:800px) {\r\n                font-size: 24px;\r\n            }\r\n        }\r\n\r\n        .overView {\r\n            max-Width:550px;\r\n            width: 100%;\r\n            line-height: 1.3;\r\n            padding-top:25px;\r\n            font-size:18px;\r\n\r\n            @media screen and (max-width:800px) {\r\n                font-size: 14px;\r\n                max-width:300px;\r\n            }\r\n\r\n            @media screen and (max-width:600px) {\r\n                font-size: 10px;\r\n                max-width: 180px;\r\n            }\r\n        }\r\n    }\r\n\r\n    .btnVolume {\r\n        position: absolute;\r\n        height: 35px;\r\n        width: 35px;\r\n        right: 10%;\r\n        top: 40%;\r\n        cursor: pointer;\r\n        border-radius: 50%;\r\n        padding: 6px;\r\n        color: #bbb;\r\n        border: #fff solid 1px;\r\n        transition: all 0.3s ease;\r\n        transform: scale(1);\r\n        z-index:2;\r\n        &:hover {\r\n            color: #fff;\r\n            transform: scale(1.2);\r\n            background-color: rgba(255, 255, 211, 0.18);\r\n        }\r\n\r\n        @media screen and (max-width:800px) {\r\n            height: 28px;\r\n            width:28px;\r\n            padding: 4px;\r\n        }\r\n\r\n        @media screen and (max-width:600px) {\r\n            height: 24px;\r\n            width:24px;\r\n            padding: 1px;\r\n        }\r\n    }\r\n\r\n    .fadeBottom {\r\n        position: absolute;\r\n        bottom: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background-image: linear-gradient(\r\n            180deg,\r\n            transparent,\r\n            rgba(15,15, 15, 0.6) 80%,\r\n            rgb(17,17,17),\r\n            rgb(17,17,17)\r\n        )\r\n    }\r\n`","import moment from 'moment';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { setMovieDetail } from '../store/action';\r\n\r\n// const showModal = true;\r\n\r\nfunction MovieDetail(props) {\r\n    const {movie, showModal} = props;\r\n    const dispatch = useDispatch()\r\n\r\n    const handleCloseModal = () => {\r\n        dispatch(setMovieDetail(null))\r\n    }\r\n    return (\r\n        <MoviesDetailModal>\r\n            <div\r\n                 className={`backdrop ${showModal ? 'showBackdrop' : 'hideBackdrop'}`}\r\n                 onClick ={handleCloseModal}\r\n            ></div>\r\n            <div className={`modal ${showModal ? 'showModal' : 'hideModal'}`} \r\n                style = {\r\n                        movie ?\r\n                        {\r\n                            backgroundImage: `url(https://images.tmdb.org/t/p/original/${movie.backdrop_path || movie.poster_path})`,\r\n                            backgroundSize: 'cover'\r\n                        } : {}}\r\n            >\r\n                <div className=\"container\">\r\n                    <div className=\"movieInfo\">\r\n                        <h1 className='movieTitle'>{movie && (movie.title || movie.name)}</h1>\r\n                        <p className='statistical'>\r\n                            <span className='rating'>Rating: {movie && movie.vote_average * 10}%</span>\r\n                            <span className='popular'>Popular: {movie && movie.popularity}</span>\r\n                        </p>\r\n\r\n                        <p className='releaseDate'>Release Date:{movie && \r\n                           ( moment(movie.release_date).format(\"DD/MM/YY\") ||\r\n                            moment(movie.first_air_date).format(\"DD/MM/YY\"))\r\n                            }\r\n                        </p>\r\n                        <p className='runTime'>Runtime: {movie && (movie.runtime || movie.episode_run_time)}</p>\r\n                        <p className='overView'>{movie && movie.overview}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </MoviesDetailModal>\r\n    );\r\n}\r\n\r\nexport default MovieDetail;\r\n\r\nconst fadeIn = keyframes `\r\n    0%: {\r\n        background: rgba(0,0,0,0)\r\n    }\r\n\r\n    100% {\r\n        background: rgba(0, 0, 0, 0.6)\r\n    }\r\n`\r\n\r\nconst MoviesDetailModal = styled.div`\r\n    .backdrop {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        z-index: 200;\r\n        background-color:rgba(0, 0, 0, 0.6 );\r\n        animation: ${fadeIn} 1s cubic-bezier(0.17, 0.85, 0.45, 1) forwards;\r\n    }\r\n\r\n    .showBackdrop {\r\n        display: block;\r\n    }\r\n\r\n    .hideBackdrop {\r\n        display: none;\r\n    }\r\n\r\n    .modal {\r\n        position: fixed;\r\n        top: 25%;\r\n        left: 0;\r\n        z-index:250;\r\n        width: 100%;\r\n        height: 80%;\r\n        margin: 0 auto;\r\n        color: var(--color-white);\r\n        box-shadow: 0 15px 40px rgba(var(--color-dark), 0.2);\r\n        transition: all 0.3s ease;\r\n\r\n        @media screen and (min-width:1184px) {\r\n            height: 70%;\r\n        }\r\n        @media screen and (min-width:600px) {\r\n            height: 80%;\r\n        }\r\n\r\n        .container {\r\n            position:relative;\r\n            width: 70%;\r\n            height: 100%;\r\n            background: linear-gradient(90deg, rgba(0, 0, 0, 0.94) 60%, transparent);\r\n\r\n            @media screen and (min-width:1184px) {\r\n                background: linear-gradient(\r\n                    90deg,\r\n                    rgba(0, 0, 0, 0.95) 45%,\r\n                    rgba(0, 0, 0, 0.733)\r\n                    transparent\r\n                );\r\n                width: 88%;\r\n            }\r\n\r\n            @media screen and (min-width:980px) {\r\n                background: linear-gradient(\r\n                    90deg,\r\n                    rgba(0, 0, 0, 0.95) 50%,\r\n                    transparent\r\n                );\r\n                width: 100%;\r\n            }\r\n\r\n            @media screen and (min-width:600px) {\r\n                background: linear-gradient(\r\n                    90deg,\r\n                    rgba(0, 0, 0, 0.88) 60%,\r\n                    transparent\r\n                );\r\n            }\r\n\r\n            .movieInfo {\r\n                width: 65%;\r\n                height: 100%;\r\n                padding-left: 24px;\r\n                color: var(--color-white);\r\n                font-size: 20px;\r\n                padding-top: 30px;\r\n\r\n                @media screen and (min-width:600px) {\r\n                    font-size: 16px;\r\n                    width: 100%;\r\n                }\r\n\r\n                .movieTitle {\r\n                    margin-top: 30px;\r\n                }\r\n\r\n                .statistical {\r\n                    margin-top: 20px;\r\n                    display: flex;\r\n\r\n                    .rating {\r\n                        color: var(--color-green);\r\n                    }\r\n\r\n                    .popular {\r\n                        color: yellow;\r\n                        margin-left: 12px;\r\n                    }\r\n                }\r\n\r\n                .releaseDate .runTime {\r\n                    margin-top: 12px;\r\n                }\r\n\r\n                .overView {\r\n                    margin-top: 20px;\r\n                    color: rgba(255, 255, 255, 0.6);\r\n                    line-height: 1.4;\r\n                    font-size: 18px; \r\n                    width: 60%;\r\n\r\n                    @media screen and (min-width: 600px) {\r\n                        font-size: 14px;\r\n                    }   \r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    .showModal {\r\n        opacity: 1;\r\n        left: 0;\r\n        top: 25%;\r\n        visibility: visible;\r\n        transition: 0.3s ease-in-out;\r\n    }\r\n\r\n    .hideModal {\r\n        top: 0;\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        transition: 0.3s ease-in-out;\r\n    }\r\n`","import React from 'react';\r\nimport {randomRgbaColor} from '../utils'\r\nimport {Link} from 'react-scroll'\r\n\r\nfunction MenuItem(props) {\r\n    const {name, Icon, to,} = props;\r\n    return (\r\n        <Link \r\n            className=\"subMenu\"\r\n            to={to}\r\n            spy={true}\r\n            hashSpy={true}\r\n            offset={-70}\r\n            duration={500}\r\n            activeClass= 'active'\r\n        >\r\n            <Icon className=\"icon\" style={{color: randomRgbaColor(1)}}/>\r\n            <span>{name}</span>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default MenuItem;","import {FaHome, FaHotjar, FaStar} from \"react-icons/fa\";\r\nimport { MdTheaterComedy } from \"react-icons/md\";\r\nimport {\r\n    GiNinjaHeroicStance,\r\n    GiGhost,\r\n    GiBandageRoll,\r\n    GiRomanToga\r\n} from \"react-icons/gi\"\r\nimport styled from \"styled-components\";\r\nimport MenuItem from \"./MenuItem\";\r\n\r\nfunction Menu(props) {\r\n    return (\r\n        <MenusPane>\r\n            <MenuItem name=\"Home\" Icon={FaHome} to='netflix'/>\r\n            <MenuItem name=\"Trending\" Icon={FaHotjar} to = 'trending'/>\r\n            <MenuItem name=\"Top rated\" Icon={FaStar} to='topRated'/>\r\n            <MenuItem name=\"Actions Movies\" Icon={GiNinjaHeroicStance} to='action'/>\r\n            <MenuItem name=\"Comedy Movies\" Icon={MdTheaterComedy}to ='comedy'/>\r\n            <MenuItem name=\"Horror Movies\" Icon={GiGhost} to='horror'/>\r\n            <MenuItem name=\"Romance Movies\" Icon={GiRomanToga} to='romance'/>\r\n            <MenuItem name=\"Documentaries\" Icon={GiBandageRoll} to='documentaries'/>\r\n        </MenusPane>\r\n    )\r\n}\r\n\r\nexport default Menu;\r\n\r\nconst MenusPane = styled.div`\r\n    position: fixed;\r\n    left: 0;\r\n    top: 20%;\r\n    width: 40px;\r\n    padding: 5px 0;\r\n    background: rgba(0, 0 , 0, 0.3);\r\n    z-index: 50;\r\n    display: flex;\r\n    flex-direction: column;\r\n    transform-origin: left center;\r\n    transition: all 0.3s linear;\r\n    overflow: hidden;\r\n\r\n    &:hover {\r\n        width: 180px;\r\n        background: rgba(0, 0 , 0, 0.5);\r\n    }\r\n\r\n    .subMenu {\r\n        display: flex;\r\n        align-items: center;\r\n        width: max-content;\r\n        margin-left: 2px;\r\n        padding: 4px 6px;\r\n        cursor: pointer;\r\n\r\n        .icon {\r\n            font-size: 25px;\r\n            margin-right: 8px;\r\n        }\r\n\r\n        span {\r\n            font-size: 16px;\r\n            font-weight: 400;\r\n            color: rgba(255, 255, 255, 0.6);\r\n\r\n            &:hover {\r\n                color: #fff;\r\n            }\r\n        }\r\n    }\r\n`","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Content from '../contents/Content';\r\nimport Intro from '../intro/Intro';\r\nimport MovieDetail from '../movieDetail/MovieDetail';\r\nimport Menu from '../mẹnu/Menu';\r\n\r\nfunction Home(props) {\r\n  const {MoviesDetail} = useSelector(state => state.infoMovies)\r\n  const [isShowMovieDetail, setIsMovieDetail] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsMovieDetail(MoviesDetail ? true : false);\r\n  }, [MoviesDetail])\r\n    return (\r\n        <div>\r\n            <Intro />\r\n            <Content/>\r\n            <Menu/>\r\n            <MovieDetail movie={MoviesDetail} showModal = {isShowMovieDetail} />\r\n          \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { useViewport } from '../hooks';\r\nimport { getSearchMovies, setMovieDetail } from '../store/action';\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search)\r\n\r\nfunction SearchMovie(props) {\r\n    const [windowWidth] = useViewport();\r\n    const dispatch = useDispatch();\r\n    const {SearchMovies} = useSelector(state => state.infoMovies)\r\n    const keywords = useQuery().get('keywords');\r\n\r\n    useEffect(() => {\r\n       if(keywords) {dispatch(getSearchMovies(keywords))}\r\n    }, [keywords])\r\n\r\n    return (\r\n        <SearchPane>\r\n            {\r\n                SearchMovies && SearchMovies.length > 0 ? (\r\n                    <div \r\n                        className='searchContent'\r\n                        style={{\r\n                            gridTemplateColumns:`repeat(${\r\n                                windowWidth > 1200? 5:\r\n                                windowWidth > 992 ? 4:\r\n                                windowWidth > 768 ? 3:\r\n                                windowWidth > 600 ? 2:1\r\n                            }, auto)`\r\n                        }}\r\n                    >\r\n                    {\r\n                        SearchMovies.map((movie, index) =>{\r\n                            if(movie.backdrop_path !== null && movie.media_type !== 'person'){\r\n                               const imgUrl = `https://images.tmdb.org/t/p/w500/${movie.backdrop_path}`\r\n                                return (\r\n                                    <div \r\n                                        className='searchItem' \r\n                                        key={index}\r\n                                        onClick ={() => dispatch(setMovieDetail(movie))}\r\n                                    >\r\n                                        <img src={imgUrl} alt=\"\"/>\r\n                                        <span>{movie.title || movie.name}</span>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                \r\n                    </div>\r\n\r\n                ) : (\r\n                    <NotFound>\r\n                        <h1>You search for \"keywords\" did not have any matches.</h1>\r\n                    </NotFound>\r\n                )\r\n\r\n            }\r\n        </SearchPane>\r\n    );\r\n}\r\n\r\nexport default SearchMovie;\r\n\r\nconst SearchPane = styled.div`\r\n    width: 100%;\r\n    min-height: 92vh;\r\n    padding-top: 80px;\r\n    background-color: var(--color-background);\r\n    transition: all 0.3s linear;\r\n\r\n    .searchContent {\r\n        padding: 40px 60px;\r\n        display: grid;\r\n        gap: 8px;\r\n\r\n        &:hover .searchItem {\r\n            opacity: 0.7;\r\n        }\r\n\r\n        .searchItem {\r\n            position: relative;\r\n            max-width: 400px;\r\n            width: 100%;\r\n            height: 200px;\r\n            border-radius: 12px;\r\n            margin: 20px 0;\r\n            overflow: hidden;\r\n            transform: scale(1)\r\n            transition: all 0.3 linear;\r\n\r\n            &:hover {\r\n                transform: scale(1.15);\r\n                z-index: 10;\r\n                opacity: 1;\r\n            }\r\n\r\n            img {\r\n                width: 100%;\r\n                height: 100%;\r\n                object-fit: cover;\r\n            }\r\n\r\n            span {\r\n                position: absolute;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n                text-align: center;\r\n                padding: 4px;\r\n                background: rgba(0, 0, 0, 0.5);\r\n                color: var(--color-white);\r\n                font-weight: bold;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst NotFound = styled.div`\r\n    padding: 5rem 8rem;\r\n    color: var(--color-white);\r\n`;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport MovieDetail from '../movieDetail/MovieDetail';\r\nimport SearchMovie from '../searchMovie/SearchMovie';\r\n\r\nfunction Search(props) {\r\n    const {MoviesDetail} = useSelector(state => state.infoMovies)\r\n    return (\r\n        <div>\r\n            <SearchMovie />\r\n            <MovieDetail showModal = {MoviesDetail ? true : false} movie = {MoviesDetail}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <DivFooter>\r\n            <div>\r\n                <h1>\r\n                    Build by\r\n                    <a href=\"https://github.com/Sonn01coder\">Sonn01coder</a>\r\n                    base on Reactjs\r\n                </h1>\r\n            </div>\r\n        </DivFooter>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n\r\nconst DivFooter = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 80px;\r\n    background-color:var(--color-background);\r\n    color: var(--color-white);\r\n    font-size: 10px;\r\n    border-top: 1px solid #fff;\r\n\r\n    a {\r\n        padding-left: 10px;\r\n        color: var(--color-green);\r\n    }\r\n`","import './App.css';\nimport Navbar from './components/Navbar/Navbar.js'\nimport Home from './components/page/Home';\nimport SearchMovie from './components/searchMovie/SearchMovie';\n\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Search from './components/page/Search';\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  return (\n    <div >\n      <BrowserRouter>\n          <Navbar />\n          <Routes>\n            <Route exact path='/netflix-clone' element={<Home/>} />\n            <Route path='/search' element={<Search />} />\n          </Routes>\n          <Footer />\n      </BrowserRouter>\n     {/* <SearchMovie/> */}\n    </div>\n  );\n}\n\nexport default App;\n ","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport store from './components/store';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}